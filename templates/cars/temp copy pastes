<!DOCTYPE html>
{% load static%}
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> User Registration </title>
    <link rel="stylesheet" href="{% static 'assets/css/userreg.css'%}">
   </head>
<body>
<h1>Welcome to our community</h1>
<div class="formtile">
  <div class="wrapper">
    <h2>Registration</h2>
    <form action="#">
      <div class="input-box">
        <input type="text" placeholder="Enter your name" required>
      </div>
      <div class="input-box">
        <input type="text" placeholder="Enter your email" required>
      </div>
      <div class="input-box">
        <input type="password" placeholder="Create password" required>
      </div>
      <div class="input-box">
        <input type="password" placeholder="Confirm password" required>
      </div>
      <div class="policy">
        <input type="checkbox">
        <h3>I accept all terms & condition</h3>
      </div>
      <div class="input-box button">
        <input type="Submit" value="Register Now">
      </div>
      <div class="text">
        <h3>Already have an account? <a href="/userlogin/">Login now</a></h3>
      </div>
    </form>
  </div>
</div>
</body>
</html>




def userlogin(request):
    if request.method == "POST":
        username = request.POST['username']
        password = request.POST['password']
        user = auth.authenticate(username=username, password=password)
        if user is not None:
            auth.login(request, user)
            return redirect('/')
        else:
            messages.info(request, "invalid login credentials")
        return redirect('userlogin')
    return render(request, 'cars/userlogin.html')


def userreg(request):
    if request.method == "POST":
        username = request.POST['username']
        email = request.POST['email']
        password = request.POST['password']
        if User.objects.filter(username=username).exists():
            messages.info(request, "username already exists")
            return redirect('userreg')
        elif User.objects.filter(email=email).exists():
            messages.info(request, "email taken")
            return redirect('userreg')
        else:
            user = User.objects.create_user(username=username, email=email, password=password)
            user.save()
        return redirect("/")
    return render(request, 'cars/userreg.html')


def userlogout(request):
    auth.logout(request)
    return redirect("/")
